@model Fuddo.Models.Product

@{
    ViewData["Title"] = "Thông tin sản phẩm";
    var images = Model.ProductImages.ToList();
    var mainImage = images.FirstOrDefault()?.ImageUrl ?? "/images/default.jpg"; // fallback ảnh mặc định
}

<style>
   
</style>

<div class="container mt-5">
    <h2 class="mb-4">Thông tin sản phẩm</h2>
    <div class="row">
        <!-- === LEFT: IMAGE + GALLERY === -->
        <div class="col-md-6">
            <div class="border mb-3 text-center">
                <img id="mainImage" src="@mainImage" class="img-fluid" style="max-height: 300px;" />
            </div>
            <div class="d-flex justify-content-center align-items-center gap-2">
                @foreach (var img in images)
                {
                    <img src="@img.ImageUrl" class="img-thumbnail thumb-img" style="height: 70px; cursor: pointer;" onclick="changeImage('@img.ImageUrl')" />
                }
            </div>
        </div>

        <!-- === RIGHT: INFO === -->
        <div class="col-md-6">
            <nav style="--bs-breadcrumb-divider: '>>';" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/Product">Sản phẩm</a></li>
                    <li class="breadcrumb-item">
                        <a href="/Product?categoryId=@Model.CategoryId">@Model.Category?.Name</a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
                </ol>
            </nav>

            <h3 class="mt-2">@Model.Name</h3>

            <p>
                <strong>Tình trạng: </strong>
                <span class="@((Model.QuantityInStock > 0) ? "text-success" : "text-danger")">
                    @(Model.QuantityInStock > 0 ? $"Còn hàng ({Model.QuantityInStock})" : "Hết hàng")
                </span>
            </p>

            <p class="text-muted">
                @Model.Description
            </p>

            <h4 class="text-danger">@Model.Price.ToString("N0") ₫</h4>

            <form id="addToCartForm">
                <input type="hidden" name="productId" value="@Model.Id" />
                <div class="mb-3">
                    <label>Số lượng:</label>
                    <input type="number" name="quantity" class="form-control w-25" value="1" min="1" max="@Model.QuantityInStock" />
                </div>
                <button type="submit" class="btn btn-orange" @(Model.QuantityInStock == 0 ? "disabled" : "")>Thêm vào giỏ hàng</button>
            </form>

            <div id="cartMessage" class="mt-2 text-success d-none"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function changeImage(src) {
            document.getElementById("mainImage").src = src;
        }
        document.getElementById("addToCartForm").addEventListener("submit", async function (e) {

            e.preventDefault();

            const form = e.target;
            const formData = new FormData(form);

            const response = await fetch("/Cart/Add", {
                method: "POST",
                body: formData
            });

            const result = await response.json();
            const messageBox = document.getElementById("cartMessage");

            messageBox.classList.remove("d-none");
            messageBox.textContent = result.message;
            messageBox.classList.toggle("text-success", result.success);
            messageBox.classList.toggle("text-danger", !result.success);

            setTimeout(() => messageBox.classList.add("d-none"), 3000);
             fetch('/CartPreview')
            .then(response => response.text())
            .then(html => {
                document.getElementById('cart-items-container').innerHTML = html;
            });
        });
    </script>
}

